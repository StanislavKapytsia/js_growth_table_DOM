{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCMA,AAJkB,SAAS,aAAa,CAAC,cAI/B,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,I,EAAM,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAEtC,EAAQ,SAAS,aAAa,CAAC,SAC/B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAmB,EAAM,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IACjC,EAAa,EAAM,QAAQ,CAAC,MAAM,CAClC,EAAgB,EAAM,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAE7D,GAAI,EAAE,MAAM,GAAK,EAAW,CACtB,EAAa,IAfJ,IAgBX,EAAU,YAAY,CAAC,WAAY,QAGjC,EAAU,YAAY,CAAC,aACzB,EAAU,eAAe,CAAC,YAO5B,IAJA,IAAM,EAAS,EAAM,SAAS,GAE1B,EAAQ,EAAM,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAE5C,EAAQ,GACb,EAAO,UAAU,GACjB,GAEJ,CAEI,EAAE,MAAM,GAAK,IACX,EAAa,GAjCJ,GAkCX,EAAU,YAAY,CAAC,WAAY,QAGjC,EAAU,YAAY,CAAC,aACzB,EAAU,eAAe,CAAC,YAK5B,AAFgB,EAAM,gBAAgB,CAE9B,MAAM,IAGZ,EAAE,MAAM,GAAK,IACX,EAAa,YAAY,CAAC,aAC5B,EAAa,eAAe,CAAC,YAG/B,EAAa,OAAO,CAAC,SAAC,CAAtB,EACE,EAAQ,UAAU,EACpB,GAEI,EAAgB,IAxDP,IAyDX,EAAa,YAAY,CAAC,WAAY,SAItC,EAAE,MAAM,GAAK,IACX,EAAgB,GA7DP,GA8DX,EAAa,YAAY,CAAC,WAAY,QAGpC,EAAa,YAAY,CAAC,aAC5B,EAAa,eAAe,CAAC,YAG/B,EAAa,OAAO,CAAC,SAAC,CAAtB,EAGE,AAFiB,EAAQ,gBAAgB,CAEhC,MAAM,EACjB,GAEJ","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar container = document.querySelector(\".container\");\nvar maxCount = 10;\nvar minCount = 2;\ncontainer.addEventListener(\"click\", function(e) {\n    var appendRow = document.querySelector(\".append-row\");\n    var removeRow = document.querySelector(\".remove-row\");\n    var appendColumn = document.querySelector(\".append-column\");\n    var removeColumn = document.querySelector(\".remove-column\");\n    var table = document.querySelector(\"tbody\");\n    var contentOfRow = _to_consumable_array(table.children);\n    var rowsLength = table.children.length;\n    var coloumnLenght = table.firstElementChild.children.length;\n    if (e.target === appendRow) {\n        if (rowsLength + 1 === maxCount) appendRow.setAttribute(\"disabled\", \"true\");\n        if (removeRow.hasAttribute(\"disabled\")) removeRow.removeAttribute(\"disabled\");\n        var newRow = table.insertRow();\n        var count = table.firstElementChild.children.length;\n        while(count > 0){\n            newRow.insertCell();\n            count--;\n        }\n    }\n    if (e.target === removeRow) {\n        if (rowsLength - 1 === minCount) removeRow.setAttribute(\"disabled\", \"true\");\n        if (appendRow.hasAttribute(\"disabled\")) appendRow.removeAttribute(\"disabled\");\n        var lastRow = table.lastElementChild;\n        lastRow.remove();\n    }\n    if (e.target === appendColumn) {\n        if (removeColumn.hasAttribute(\"disabled\")) removeColumn.removeAttribute(\"disabled\");\n        contentOfRow.forEach(function(element) {\n            element.insertCell();\n        });\n        if (coloumnLenght + 1 === maxCount) appendColumn.setAttribute(\"disabled\", \"true\");\n    }\n    if (e.target === removeColumn) {\n        if (coloumnLenght - 1 === minCount) removeColumn.setAttribute(\"disabled\", \"true\");\n        if (appendColumn.hasAttribute(\"disabled\")) appendColumn.removeAttribute(\"disabled\");\n        contentOfRow.forEach(function(element) {\n            var lastCell = element.lastElementChild;\n            lastCell.remove();\n        });\n    }\n});\n\n//# sourceMappingURL=index.bbfeeedf.js.map\n","'use strict';\n\nconst container = document.querySelector('.container');\nconst maxCount = 10;\nconst minCount = 2;\n\ncontainer.addEventListener('click', (e) => {\n  const appendRow = document.querySelector('.append-row');\n  const removeRow = document.querySelector('.remove-row');\n  const appendColumn = document.querySelector('.append-column');\n  const removeColumn = document.querySelector('.remove-column');\n\n  const table = document.querySelector('tbody');\n  const contentOfRow = [...table.children];\n  const rowsLength = table.children.length;\n  const coloumnLenght = table.firstElementChild.children.length;\n\n  if (e.target === appendRow) {\n    if (rowsLength + 1 === maxCount) {\n      appendRow.setAttribute('disabled', 'true');\n    }\n\n    if (removeRow.hasAttribute('disabled')) {\n      removeRow.removeAttribute('disabled');\n    }\n\n    const newRow = table.insertRow();\n\n    let count = table.firstElementChild.children.length;\n\n    while (count > 0) {\n      newRow.insertCell();\n      count--;\n    }\n  }\n\n  if (e.target === removeRow) {\n    if (rowsLength - 1 === minCount) {\n      removeRow.setAttribute('disabled', 'true');\n    }\n\n    if (appendRow.hasAttribute('disabled')) {\n      appendRow.removeAttribute('disabled');\n    }\n\n    const lastRow = table.lastElementChild;\n\n    lastRow.remove();\n  }\n\n  if (e.target === appendColumn) {\n    if (removeColumn.hasAttribute('disabled')) {\n      removeColumn.removeAttribute('disabled');\n    }\n\n    contentOfRow.forEach((element) => {\n      element.insertCell();\n    });\n\n    if (coloumnLenght + 1 === maxCount) {\n      appendColumn.setAttribute('disabled', 'true');\n    }\n  }\n\n  if (e.target === removeColumn) {\n    if (coloumnLenght - 1 === minCount) {\n      removeColumn.setAttribute('disabled', 'true');\n    }\n\n    if (appendColumn.hasAttribute('disabled')) {\n      appendColumn.removeAttribute('disabled');\n    }\n\n    contentOfRow.forEach((element) => {\n      const lastCell = element.lastElementChild;\n\n      lastCell.remove();\n    });\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","container","document","querySelector","addEventListener","e","appendRow","removeRow","appendColumn","removeColumn","table","contentOfRow","_array_without_holes","isArray","children","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","rowsLength","coloumnLenght","firstElementChild","target","setAttribute","hasAttribute","removeAttribute","newRow","insertRow","count","insertCell","lastRow","lastElementChild","remove","forEach","element","lastCell"],"version":3,"file":"index.bbfeeedf.js.map"}